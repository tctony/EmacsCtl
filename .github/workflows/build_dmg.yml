name: Build DMG

on:
  # push:
  #   branches:
  #     - 'debug-update'
  workflow_dispatch:
  workflow_call:

jobs:
  build-app:
    uses: ./.github/workflows/build_app.yml

  build-dmg:
    needs: build-app

    runs-on: macos-13

    steps:
      - name: Download App
        uses: actions/download-artifact@v3
        with:
          name: EmacsCtl.zip

      - name: Unzip app
        run: unzip EmacsCtl.zip

      - name: Set Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.2'

      - name: Install Cert
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.CERT_P12 }}
          p12-password: ${{ secrets.CERT_P12_PASS }}

      - name: Codesign
        run: |
          codesign --force --options runtime --deep \
            --sign "${{ secrets.CERT_NAME }}" EmacsCtl.app

      - name: Set dmg filename
        run: |
          Ver=$(/usr/libexec/PlistBuddy -c "Print :CFBundleShortVersionString" EmacsCtl.app/Contents/Info.plist)
          DMG_FILE="EmacsCtl-v$Ver.dmg"
          echo "DMG_FILE: $DMG_FILE"
          echo "DMG_FILE=$DMG_FILE" >> $GITHUB_ENV

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.0
        with:
          node-version: ">=18"
      - name: Setup python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Create dmg
        run: |
          npm install -g appdmg
          cat << EOF > dmg.json
          {
            "title": "EmacsCtl",
            "contents": [
              { "x": 448, "y": 200, "type": "link", "path": "/Applications" },
              { "x": 192, "y": 200, "type": "file", "path": "EmacsCtl.app" }
            ]
          }
          EOF
          appdmg dmg.json ${{ env.DMG_FILE }}

      - name: Notarize
        uses: cocoalibs/xcode-notarization-action@v1
        with:
          app-path: '${{ env.DMG_FILE }}'
          apple-id: ${{ secrets.APPLE_ID }}
          password: ${{ secrets.APPLE_ID_PASS }}
          team-id: ${{ secrets.APPLE_TEAM_ID }}
          staple: 'true'
          keychain-profile: 'notarize'
          xcode-path: '/Applications/Xcode.app'

      - name: Upload dmg
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DMG_FILE }}
          path:
            ${{ env.DMG_FILE }}
